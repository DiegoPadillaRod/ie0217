1. Cual es la principal diferencia entre C y C++?,La principal diferencia entre C y C++ es que C++ es una extensión de C que admite programación orientada a objetos, mientras que C se centra en la programación procedural.
2. Cual es la diferencia entre un interprete y un compilador?,La principal diferencia es que un compilador traduce todo el programa a código máquina antes de su ejecución, mientras que un intérprete ejecuta el código línea por línea en tiempo real.
3. Que es el namespace y para qué se utiliza?,Un namespace en C++ es un espacio de nombres que se utiliza para evitar conflictos de nombres entre las variables, funciones y clases. Ayuda a organizar y estructurar el código al proporcionar un alcance separado para elementos relacionados.
4. Cual es la diferencia entre declarar e inicializar una variable?,Declarar una variable significa definir su tipo y nombre, reservando memoria para ella. Inicializar una variable significa asignarle un valor específico en el momento de la declaración.
5. Cual es la diferencia entre un break y un continue en los bucles de C++?,
6. Que es el polimorfismo en clases?,
7. Que hace la sentencia extern?,
8. Que son las palabras reservadas?,
9. Que es un puntero y como se utiliza? Explique con un ejemplo de la vida real?,
10. Que es una funcion prototipo?,
11. Que es un puntero nullptr?,
12. Cual es la diferencia entre pasar parámetros por valor, por referencia y por puntero?,
13. Que es un memory leak?,
14. Para que se utiliza la directiva #ifndef?,
15. Que es el type casting?,
16. Cual es la diferencia entre un arreglo y una lista en C++?,
17. Que es el puntero this en C++?,
18. Que es un objeto y qué es instanciar?,
19. Que es el constructor y el destructor en una clase?,
20. Que es la sobrecarga de operadores en C++ y como se utiliza?,
21. Que es memoria dinamica?,
22. Que es memoria estatica?,
23. Que es una biblioteca dinamica?,
24. Que es una biblioteca estatica?,
25. Que es un systemcall?,
26. Que es un callback?,
27. SPI?,
28. I2C?,
29. Que es un programa deamon?,
30. Que es un cross-compiler?,
31. Que es un proceso?,
32. Que es un thread?,